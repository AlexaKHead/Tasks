q()
q()
5
A <- 5
A * 2
B <- c(A, 5, 5)
B
B * 10
'B' * 10
B <- c(A, 5, 5)
B * 2
C <- c(B, 6, 10)
C * 6
C*1
D <- c(1, 5, ,10, 15, 20)
D <- c(1, 5, 10, 15, 20)
sum(D)
mean (D)
min(D)
E <- c(6, 7, 8, 9, 10)
which(E == 8)
which(E > 8)
E[which(E>8)]
trueMean1 <- 5
trueSD1 <- 5
population1 <- rnorm(1e6, trueMean1, trueSD1)
?rnorm
trueMean2 <- 4
trueSD2 <- 5
population2 <- rnorm
population2 <- rnorm(1e6, trueMean2, trueSD2)
Size <- 50
Sample1 <- sample(population1, Size)
Sample2 <- sample(population2, Size)
?sample
Sample1
Sample2
population1
boxplot(Sample1, Sample2)
individual1 <- c("B","A")
individual2 <- c("A","A")
Gam1 <- sample(individual1, 1)
Gam2 <- sample(individual2, 1)
newBaby <- c(Gam1, Gam2)
newBaby
isHet <- c()
?for
()
for (i in 1:100)
{
Gam1 <- sample(individiual1, 1)
Gam2 <- sample(individual2, 1)
newBaby <- c(Gam1, Gam2)
isHet[i] <- Gam1 == Gam2
}
for (i in 1:100) {
Gam1 <- sample(individual1, 1)
Gam2 <- sample(individual2, 1)
newBaby <- c(Gam1, Gam2)
isHet[i] <- Gam1 == Gam2
}
sum(isHet) / length(isHet)
source("http://jonsmitchell.com/code/simFxn04.R")
MatGrandma <- makeFounder("grandma_mom")
MatGrandpa <- makeFounder("grandpa_mom")
PatGrandma <- makeFounder("grandma_da")
PatGrandpa <- makeFounder("grandpa_da")
View(MatGrandma)
View(makeFounder)
head(MatGrandma)
nrow(MatGrandma)
Alan <- makeBaby(PatGrandma, PatGrandpa)
Alan
Brenda <- makeBaby(MatGrandma, MatGrandpa)
Focus <- makeBaby(Brenda, Alan)
View(Focus)
View(Brenda)
View(Focus)
ToMom <- length(grep("mom", Focus)) / length(Focus)
ToMom
ToMomDad <- length(grep("grandpa_mom", Focus)) / length(Focus)
ToMomMom <- length(grep("grandma_mom", Focus)) / length(Focus)
ToMomMom
ToMomDad
sum(ToMomMom, ToMomDad)
ToDadMom <- length(grep("grandma_dad", Focus)) / length(Focus)
ToDadDad <- length(grep("grandpa_dad", Focus)) / length(Focus)
ToDadMom
ToDadDad
Sibling_01 <- makeBaby(Brenda, Alan)
ToSib <- length(intersect(Focus, Sibling_01)) / length(Focus)
ToSib
ManySiblings <- replicate(1e3, length(intersect(Focus, makeBaby(Brenda, Alan)))) / length(Focus)
ManySiblings <- replicate(1e3, length(intersect(Focus, makeBaby(Brenda, Alan)))) / length(Focus))
quantile(ManySiblings)
mean(ManySiblings)
plot(ManySiblings)
packages(swirl)
library(swirl)
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean()
my_mean(my_vector)
my_mean(c(4,5,10))
submit()
submit()
submit()
submit()
submit()
submit()
remainder(5)
remainder(1,5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div=2)
args(remainder)
submit()
evaluate(c(1.4,3.6,7.9,8.8))
source("http://jonsmitchell.com/code/fxn05.R")
Pop1 <- simPop(Popsize = 50, nGenerations = 100, initial_p=0.5, h=1, s=0)
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0,1), type = "l", xlab="generation", ylab="allele freq.", lwd=2)
lines(1:nrow(Pop1), Pop1[,2], lwd=2, col='red')
legend("topleft", legend = c("a","b"), col = c("black", "red"), lwd=2, bty="n")
plotFit(nruns = 10, n = 50, ngens=100, init_p=0.5, h=1, s=0)
Expectation <- c(10,10,10,10)
Observed <- c(15, 15, 5, 5)
Chisq <- sum(((Expectation - Observed)^2)/ Expectation)
barplot(rbind(Expectation, Observed), beside = T, main = bquote(chi^2 ~ "=" ~.(Chisq)), legend.text=c("expected", "observed"))
Observed <- c(5, 0, 0, 35)
barplot(rbind(Expectation, Observed), beside = T, main = bquote(chi^2 ~ "=" ~.(Chisq)), legend.text=c("expected", "observed"))
Observed <- c(2, 3, 10, 30)
barplot(rbind(Expectation, Observed), beside = T, main = bquote(chi^2 ~ "=" ~.(Chisq)), legend.text=c("expected", "observed"))
setwd("C:/users/lexik/evolution/tasks/task_04")
results <- read.csv("http://jonsmitchell.com/data/biol112labresults.csv", stringsAsFactors=F)
counts <- results[,c("yellow","red","green","blue","black","tan")]
backgrounds <- c("White","Red","Yellow","Green","Blue","Black")
backgroundCol <- c("white", "#d53e4f", "#fee08b", "#abdda4", "#3288bd", "black")
source("http://jonsmitchell.com/code/fxn05.R")
calcChi(counts[1,])
Chisqs <- apply(counts, 1, calcChi)
plotChis(counts)
Avg <- mean(Chisqs)
backgroundAvgs <- tapply(Chisqs, results[,3], mean)
propSig <- length(which(Chisqs > 11.70))/length(Chisqs)
percSig <- round(100 * propSig)
par(las=1, mar=c(4,4,1,1), mgp=c(2,0.5,0), tck= -0.01, cex.axis=1)
hist(Chisqs, main="", xlab="chi-squared values", ylab="frequency")
par(las = 1, mar = c(4,4,1,1), mgp=c(2,0.5,0), tck=-0.01, cex.axis=1)
plot(1,1, xlim=c(0,400), ylim=c(1,8.5), xlab="", ylab="", type="n", yaxt="n")
axis(2, at = 1:length(backgrounds), labels = backgrounds)
mtext(side=1, expression(chi^2), cex=1.75, line=2.5)
counter <- 1
for (i in backgrounds) {
Data <- Chisqs[which(results[,3] == i)]
addHist(Y=counter, Dat=Data, Color=backgroundCol[counter])
counter <- counter + 1
}
abline(v= 11.70, lty=2, lwd=2, col='black')
Simulation <- simDraws(10000)
addHist(Y=7, Dat=Simulation, Color="lightgray")
mtext(side=2, at=7, line=0, "simulated")
abline(v=11.70, lty=2, lwd=2)
Fit <- c(1,1,1,1,1,1)
names(Fit)<- 1:6
Simulation2 <- simDraws(1e4, w = Fit)
addHist(Y=8, Dat=Simulation2, Color=rgb(0,0,0,0.26))
Fit <- c(0.1, 1, 1, 1, 1, 1)
names(Fit) <- (1:6)
Simulation3 <- simDraws(1e4, w=Fit)
addHist(Y=8, Dat=Simulation2, Color=rgb(0,0,0,0.25))
Fit <- c(0.5, 0.6, 0.7, 1, 1, 1)
names(Fit) <- 1:6
Simulation4 <- simDraws(1e4, w = Fit)
addHist(Y=8, Dat=Simulation4, Color=rgb(0,0,0,0.25))
Fit <- c(0.1, 0.2, 0.3, 0.4, 0.5, 1)
names(Fit) <- 1:6
Simulation5 <- simDraws(1e4, w=Fit)
addHist(Y=8, Dat=Simulation5, Color=rgb(0,0,0,0.25))
Fit <- c(0.1, 0.1, 0.1, 0.1, 0.1, 1)
names(Fit) <- 1:6
Simulation6 <- simDraws(1e4, w=Fit)
addHist(Y=8, Dat=Simulation6, Color=rgb(0,0,0,0.25))
mtext(side=2, at=8, line=0, "sel. sim.")
Simulation7 <- c(Simulation2, Simulation3, Simulation4, Simulation5, Simulation6)
addHist(Y=8, Dat=Simulation7, Color=rgb(0,0,1,0.25))
plot(1,1, xlim=c(0,400), ylim=c(1,8.5), xlab="", ylab="", type="n", yaxt="n")
axis(2, at = 1:length(backgrounds), labels = backgrounds)
mtext(side=1, expression(chi^2), cex=1.75, line=2.5)
counter <- 1
for (i in backgrounds) {
Data <- Chisqs[which(results[,3] == i)]
addHist(Y=counter, Dat=Data, Color=backgroundCol[counter])
counter <- counter + 1
}
abline(v= 11.70, lty=2, lwd=2, col='black')
Simulation <- simDraws(10000)
addHist(Y=7, Dat=Simulation, Color="lightgray")
mtext(side=2, at=7, line=0, "simulated")
abline(v=11.70, lty=2, lwd=2)
Fit <- c(1,1,1,1,1,1)
names(Fit)<- 1:6
Simulation2 <- simDraws(1e4, w = Fit)
addHist(Y=8, Dat=Simulation2, Color=rgb(0,0,0,0.26))
Fit <- c(0.1, 1, 1, 1, 1, 1)
names(Fit) <- (1:6)
Simulation3 <- simDraws(1e4, w=Fit)
addHist(Y=8, Dat=Simulation2, Color=rgb(0,0,0,0.25))
Fit <- c(0.5, 0.6, 0.7, 1, 1, 1)
names(Fit) <- 1:6
Simulation4 <- simDraws(1e4, w = Fit)
addHist(Y=8, Dat=Simulation4, Color=rgb(0,0,0,0.25))
Fit <- c(0.1, 0.2, 0.3, 0.4, 0.5, 1)
names(Fit) <- 1:6
Simulation5 <- simDraws(1e4, w=Fit)
addHist(Y=8, Dat=Simulation5, Color=rgb(0,0,0,0.25))
Fit <- c(0.1, 0.1, 0.1, 0.1, 0.1, 1)
names(Fit) <- 1:6
Simulation6 <- simDraws(1e4, w=Fit)
addHist(Y=8, Dat=Simulation6, Color=rgb(0,0,0,0.25))
mtext(side=2, at=8, line=0, "sel. sim.")
Simulation7 <- c(Simulation2, Simulation3, Simulation4, Simulation5, Simulation6)
addHist(Y=8, Dat=Simulation7, Color=rgb(0,0,1,0.25))
