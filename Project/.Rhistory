q()
q()
5
A <- 5
A * 2
B <- c(A, 5, 5)
B
B * 10
'B' * 10
B <- c(A, 5, 5)
B * 2
C <- c(B, 6, 10)
C * 6
C*1
D <- c(1, 5, ,10, 15, 20)
D <- c(1, 5, 10, 15, 20)
sum(D)
mean (D)
min(D)
E <- c(6, 7, 8, 9, 10)
which(E == 8)
which(E > 8)
E[which(E>8)]
trueMean1 <- 5
trueSD1 <- 5
population1 <- rnorm(1e6, trueMean1, trueSD1)
?rnorm
trueMean2 <- 4
trueSD2 <- 5
population2 <- rnorm
population2 <- rnorm(1e6, trueMean2, trueSD2)
Size <- 50
Sample1 <- sample(population1, Size)
Sample2 <- sample(population2, Size)
?sample
Sample1
Sample2
population1
boxplot(Sample1, Sample2)
individual1 <- c("B","A")
individual2 <- c("A","A")
Gam1 <- sample(individual1, 1)
Gam2 <- sample(individual2, 1)
newBaby <- c(Gam1, Gam2)
newBaby
isHet <- c()
?for
()
for (i in 1:100)
{
Gam1 <- sample(individiual1, 1)
Gam2 <- sample(individual2, 1)
newBaby <- c(Gam1, Gam2)
isHet[i] <- Gam1 == Gam2
}
for (i in 1:100) {
Gam1 <- sample(individual1, 1)
Gam2 <- sample(individual2, 1)
newBaby <- c(Gam1, Gam2)
isHet[i] <- Gam1 == Gam2
}
sum(isHet) / length(isHet)
source("http://jonsmitchell.com/code/simFxn04.R")
MatGrandma <- makeFounder("grandma_mom")
MatGrandpa <- makeFounder("grandpa_mom")
PatGrandma <- makeFounder("grandma_da")
PatGrandpa <- makeFounder("grandpa_da")
View(MatGrandma)
View(makeFounder)
head(MatGrandma)
nrow(MatGrandma)
Alan <- makeBaby(PatGrandma, PatGrandpa)
Alan
Brenda <- makeBaby(MatGrandma, MatGrandpa)
Focus <- makeBaby(Brenda, Alan)
View(Focus)
View(Brenda)
View(Focus)
ToMom <- length(grep("mom", Focus)) / length(Focus)
ToMom
ToMomDad <- length(grep("grandpa_mom", Focus)) / length(Focus)
ToMomMom <- length(grep("grandma_mom", Focus)) / length(Focus)
ToMomMom
ToMomDad
sum(ToMomMom, ToMomDad)
ToDadMom <- length(grep("grandma_dad", Focus)) / length(Focus)
ToDadDad <- length(grep("grandpa_dad", Focus)) / length(Focus)
ToDadMom
ToDadDad
Sibling_01 <- makeBaby(Brenda, Alan)
ToSib <- length(intersect(Focus, Sibling_01)) / length(Focus)
ToSib
ManySiblings <- replicate(1e3, length(intersect(Focus, makeBaby(Brenda, Alan)))) / length(Focus)
ManySiblings <- replicate(1e3, length(intersect(Focus, makeBaby(Brenda, Alan)))) / length(Focus))
quantile(ManySiblings)
mean(ManySiblings)
plot(ManySiblings)
packages(swirl)
library(swirl)
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean()
my_mean(my_vector)
my_mean(c(4,5,10))
submit()
submit()
submit()
submit()
submit()
submit()
remainder(5)
remainder(1,5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div=2)
args(remainder)
submit()
evaluate(c(1.4,3.6,7.9,8.8))
cd ~/Evolution/Tasks/Project
setwd("C:/Users/lexik/evolution/tasks/project")
getwd()
#install.packages('readxl')
library("readxl")
df = read_xlsx("C:/Users/lexik/evolution/tasks/project/AllSpecimens.xlsx")
allSpecimens <- df
head(allSpecimens)
colnames(allSpecimens)
footMeans <- read.csv("FootLandmarks.SpeciesSummary.Csize.csv")
head(footMeans)
colnames(footMeans)
bodyMeasurements <- read.csv("LinMeas.SpeciesSummaries.csv")
head(bodyMeasurements)
colnames(bodyMeasurements)
microHabitats <- read.csv("Microhabitats.csv")
head(microHabitats)
colnames(microHabitats)
neoteny <- read.csv("neoteny.csv")
head(neoteny)
colnames(neoteny)
str(neoteny)
library("phytools")
library("ape")
caudata <- read.tree(file="Bonett_and_Blair_Phylo.tre")
library('dplyr')
library('tidyr')
library('plyr')
library('knitr')
library('ggplot2')
install.packages('readr')
install.packages('multcompView')
library('readr')
library('multcompView')
neoSp <- apply(neoteny, 1, function(x) paste(x[1], x[2], sep="_"))
rownames(neoteny) <- neoSp
rownames(microHabitats) <- microHabitats[,1]
Keeps <- intersect(rownames(neoteny), rownames(microHabitats))
rownames(bodyMeasurements) <- bodyMeasurements[,1]
rownames(neoteny) <- neoSp
rownames(microHabitats) <- microHabitats[,1]
Keeps2 <- intersect(rownames(neoteny), rownames(microHabitats))
rownames(bodyMeasurements) <- bodyMeasurements[,1]
Keeps2 <- intersect(Keeps2, rownames(bodyMeasurements))
newMat <- data.frame(neoteny[Keeps2,], bodyMeasurements[Keeps2,], microHabitats[Keeps2,])
neo2 <- neoteny[Keeps,]
micro2 <- microHabitats[Keeps,]
ohabitat <- tapply(micro2$M7, micro2$M7, length)
oneo <- tapply(neo2$neotenic, neo2$neotenic, length)
outMat <- matrix(0, nrow=7, ncol=4)
rownames(outMat) <- unique(micro2$M7)
colnames(outMat) <- unique(neo2$neotenic)
for (count in 1:4){
Neo <- unique(neo2$neotenic)[count]
NeoRows <- which(neo2$neotenic == Neo)
Habs <- tapply(micro2[NeoRows,"M7"], micro2[NeoRows,"M7"], length)
outMat[names(Habs),count] <- Habs
}
outMat <- outMat[,c("-1","0","1","2")]
Cols <- c('#d53e4f','#fc8d59','#fee08b','#ffffbf','#e6f598','#99d594','#3288bd')
names(Cols) <- unique(micro2$M7)
barplot(outMat, col=Cols)
svl2 <- reframe(bodyMeasurements, .by=c("Species", "SVL"))
rownames(svl2) <- svl2[,1]
micro3 <- subset(micro2, select = -c(M6, L6, L7, McM6, McL6, Pleth))
neo3 <- subset(neo2, select = -c(notes))
listDF <- list(micro3, neo3, svl2)
master <- subset(newMat, select = -c(notes, M6, L6, L7, McM6, McL6, McM6, Pleth, Species.1, Species))
qplot(x = SVL, y = TL, geom = "point", data = master) +
facet_grid(.~M7, labeller = label_both)
qplot(x = SVL, y = TL, geom = "point", data = master) +
facet_grid(.~neotenic, labeller = label_both)
master$neotenic <- as.factor(master$neotenic)
master$SVL_Factor <- as.factor(master$SVL)
anova1 <- aov(SVL ~ Neotenic*SVL_Factor, data=master)
anova1 <- aov(SVL ~ neotenic*SVL_Factor, data=master)
summary(anova1)
habTL <- ggplot(master, aes(y=TL, x=M7, fill=M7)) +
geom_boxplot() +
theme_classic()
habSVL + ggtitle("TL by Microhabitat") + xlab("Habitat") + ylab("Tail Length")
habTL <- ggplot(master, aes(y=TL, x=M7, fill=M7)) +
geom_boxplot() +
theme_classic()
habTL + ggtitle("TL by Microhabitat") + xlab("Habitat") + ylab("Tail Length")
habTL + labs(fill = "Microhabitats")
dev.off()
plot(SVL ~ neotenic + factor(M7), data=master)
?plot
plot(SVL ~ neotenic + factor(M7), data=master, col=M7)
plot(SVL ~ neotenic + factor(M7), data=master, col= boxfill)
plot(SVL ~ neotenic + factor(M7), data=master)
plot(TL ~ neotenic + factor(M7), data=master)
dev.off()
plot(SVL ~ neotenic + factor(M7), data=master, col=Cols)
plot(TL ~ neotenic + factor(M7), data=master, col=Cols)
dev.off()
plot(SVL ~ neotenic + factor(M7), data=master, col=Cols, xlab="Microhabitat")
dev.off()
plot(TL ~ neotenic + factor(M7), data=master, col=Cols, xlab="Microhabitat")
plot(SVL ~ neotenic + factor(M7), data=master, col=Cols, xlab="Microhabitat")
anova1 <- aov(SVL ~ neotenic*factor(M7), data=master)
summary(anova1)
anova1 <- aov(SVL ~ neotenic*factor(M7), data=master)
anova1
preanova1 <- lm(SVL ~ neotenic*M7), data=master)
preanova1 <- lm(SVL ~ neotenic*M7, data=master)
anova1 <- anova(preanova1)
anova1
summary(anova1)
emmeans(anova1, pairwise~M7)
preanova2 <- lm(TL ~ neotenic*M7, data=master)
anova2 <- anova(preanova2)
summary(anova2)
dev.off()
interacion.plot(x.factor = data$M7, trace.factor=data$neotenic, response =data$SVL, fun=mean, type="b", legend=TRUE, xlab="Habitat", ylab="neoteny", pch=c(1,19), col=Cols)
packages('dplyr')
library('dplyr')
interacion.plot(x.factor = data$M7, trace.factor=data$neotenic, response =data$SVL, fun=mean, type="b", legend=TRUE, xlab="Habitat", ylab="neoteny", pch=c(1,19), col=Cols)
install.packages('ggpubr')
library('ggpubr')
interacion.plot(x.factor = data$M7, trace.factor=data$neotenic, response =data$SVL, fun=mean, type="b", legend=TRUE, xlab="Habitat", ylab="neoteny", pch=c(1,19), col=Cols)
interaction.plot(x.factor = data$M7, trace.factor=data$neotenic, response =data$SVL, fun=mean, type="b", legend=TRUE, xlab="Habitat", ylab="neoteny", pch=c(1,19), col=Cols)
interaction.plot(x.factor = master$M7, trace.factor=master$neotenic, response =data$SVL, fun=mean, type="b", legend=TRUE, xlab="Habitat", ylab="neoteny", pch=c(1,19), col=Cols)
interaction.plot(x.factor = master$M7, trace.factor=master$neotenic, response =master$SVL, fun=mean, type="b", legend=TRUE, xlab="Habitat", ylab="neoteny", pch=c(1,19), col=Cols)
interaction.plot(x.factor = master$M7, trace.factor=master$SVL, response =master$SVL, fun=mean, type="b", legend=TRUE, xlab="Habitat", ylab="neoteny", pch=c(1,19), col=Cols)
interaction.plot(x.factor = master$M7, trace.factor=master$SVL, response =master$neotenic, fun=mean, type="b", legend=TRUE, xlab="Habitat", ylab="SVL", pch=c(1,19), col=Cols)
anova1 <- anova(preanova1, type=3)
dev.off()
preanova1 <- lm(SVL ~ neotenic*M7, data=master)
anova1 <- anova(preanova1, type=3)
preanova1 <- lm(SVL ~ neotenic*M7, data=master)
anova1 <- anova(preanova1)
summary(anova1)
summary.aov(preanova1, split=list(M7=list(L=1, Q=2)))
summary.aov(preanova2, split=list(M7=list(L=1, Q=2)))
contrasts <- summary.aov(preanova1, split=list(M7=list(L=1, Q=2)))[[1]][c(3,4,6,7)]
contrasts <- summary.aov(preanova1, split=list(M7=list(L=1, Q=2)))[[1]][c(3,4,6,7), c(2,1,4,5)]
contrasts
contrasts2 <- summary.aov(preanova2, split=list(M7=list(L=1, Q=2)))[[1]][c(3,4,6,7), c(2,1,4,5)]
contrasts2
contrasts1 <- summary.aov(preanova1, split=list(M7=list(L=1, Q=2)))[[1]][c(3,4,6,7), c(2,1,4,5)]
maineffects1 <- anova1[c(1,2,3)]
meContrasts1 <- contrasts1[c(1,2),]
interaction1 <- anova1[4,]
int_contrasts1 <- contrasts1[c(3,4),]
resid1 <- anova1[5,]
anova1 <- rbind(maineffects1, meContrasts1, interaction1, int_contrasts1, resid1)
anova1
summary.aov(preanova1, split=list(M7=list(L=1, Q=2)))
contrasts1 <- summary.aov(preanova1, split=list(M7=list(L=1, Q=2)))[[1]][c(3,4,6,7), c(2,1,4,5)]
maineffects1 <- anova1[c(1,2,3),]
meContrasts1 <- contrasts1[c(1,2),]
interaction1 <- anova1[4,]
int_contrasts1 <- contrasts1[c(3,4),]
resid1 <- anova1[5,]
anova1 <- rbind(maineffects1, meContrasts1, interaction1, int_contrasts1, resid1)
contrasts1 <- summary.aov(preanova1, split=list(M7=list(L=1, Q=2)))[[1]][c(3,4,6,7), c(2,1,4,5)]
contrasts1
kable(anova1, digits=3)
options(knitr.kable.NA = '')
kable(anova1, digits=3)
tableSVL <- kable(anova1, digits=3)
tableSVL <- kable(anova2, digits=3)
tableSVL
tableSVL <- kable(anova1, digits=3)
tableTL <- kable(anova2, digits=3)
tableSVL
tableTL
tableSVL <- kable(anova1, digits=3, format="pandoc", caption="SVL Table")
tableSVL
tableSVL <- kable(anova1, digits=3)
tableSVL
tableSVL <- kable(anova1, digits=3, format="pandoc", caption="SVL Table")
tableSVL
tableTL
