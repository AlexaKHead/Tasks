q()
q()
5
A <- 5
A * 2
B <- c(A, 5, 5)
B
B * 10
'B' * 10
B <- c(A, 5, 5)
B * 2
C <- c(B, 6, 10)
C * 6
C*1
D <- c(1, 5, ,10, 15, 20)
D <- c(1, 5, 10, 15, 20)
sum(D)
mean (D)
min(D)
E <- c(6, 7, 8, 9, 10)
which(E == 8)
which(E > 8)
E[which(E>8)]
trueMean1 <- 5
trueSD1 <- 5
population1 <- rnorm(1e6, trueMean1, trueSD1)
?rnorm
trueMean2 <- 4
trueSD2 <- 5
population2 <- rnorm
population2 <- rnorm(1e6, trueMean2, trueSD2)
Size <- 50
Sample1 <- sample(population1, Size)
Sample2 <- sample(population2, Size)
?sample
Sample1
Sample2
population1
boxplot(Sample1, Sample2)
individual1 <- c("B","A")
individual2 <- c("A","A")
Gam1 <- sample(individual1, 1)
Gam2 <- sample(individual2, 1)
newBaby <- c(Gam1, Gam2)
newBaby
isHet <- c()
?for
()
for (i in 1:100)
{
Gam1 <- sample(individiual1, 1)
Gam2 <- sample(individual2, 1)
newBaby <- c(Gam1, Gam2)
isHet[i] <- Gam1 == Gam2
}
for (i in 1:100) {
Gam1 <- sample(individual1, 1)
Gam2 <- sample(individual2, 1)
newBaby <- c(Gam1, Gam2)
isHet[i] <- Gam1 == Gam2
}
sum(isHet) / length(isHet)
source("http://jonsmitchell.com/code/simFxn04.R")
MatGrandma <- makeFounder("grandma_mom")
MatGrandpa <- makeFounder("grandpa_mom")
PatGrandma <- makeFounder("grandma_da")
PatGrandpa <- makeFounder("grandpa_da")
View(MatGrandma)
View(makeFounder)
head(MatGrandma)
nrow(MatGrandma)
Alan <- makeBaby(PatGrandma, PatGrandpa)
Alan
Brenda <- makeBaby(MatGrandma, MatGrandpa)
Focus <- makeBaby(Brenda, Alan)
View(Focus)
View(Brenda)
View(Focus)
ToMom <- length(grep("mom", Focus)) / length(Focus)
ToMom
ToMomDad <- length(grep("grandpa_mom", Focus)) / length(Focus)
ToMomMom <- length(grep("grandma_mom", Focus)) / length(Focus)
ToMomMom
ToMomDad
sum(ToMomMom, ToMomDad)
ToDadMom <- length(grep("grandma_dad", Focus)) / length(Focus)
ToDadDad <- length(grep("grandpa_dad", Focus)) / length(Focus)
ToDadMom
ToDadDad
Sibling_01 <- makeBaby(Brenda, Alan)
ToSib <- length(intersect(Focus, Sibling_01)) / length(Focus)
ToSib
ManySiblings <- replicate(1e3, length(intersect(Focus, makeBaby(Brenda, Alan)))) / length(Focus)
ManySiblings <- replicate(1e3, length(intersect(Focus, makeBaby(Brenda, Alan)))) / length(Focus))
quantile(ManySiblings)
mean(ManySiblings)
plot(ManySiblings)
packages(swirl)
library(swirl)
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean()
my_mean(my_vector)
my_mean(c(4,5,10))
submit()
submit()
submit()
submit()
submit()
submit()
remainder(5)
remainder(1,5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div=2)
args(remainder)
submit()
evaluate(c(1.4,3.6,7.9,8.8))
sessionInfo()
library("diversitree")
installl.packages("diversitree")
install.packages("diversitree")
library("diversitree")
transition_0to1 <- 0.1
transition1to0 < 0.1
transition_0to1 <- 0.1
transition_1to0 <- 0.1
speciation_0 <- 0.2
extinction_0 <- 0.1
speciation_1 <- 0.2
extinction_1 <- 0.1
maxN <- 1e3
maxT <- 50
tree.bisse()
Pars <- c(speciation_0, speciation_1, extinction_0, extinction_1, transition_0to1, transition_1to0)
simTree <- tree.bisse(pars, max.taxa=maxN, max.t=maxT)
simTree <- tree.bisse(Pars, max.taxa=maxN, max.t=maxT)
str(simTree)
stateTable<- table(simTree$tip.state)
stateTable/sum(stateTable)
pdf("statetable.pdf")
plot(stateTable)
library("diversitree")
transition_0to1 <- 0.1
transition_1to0 <- 0.1
speciation_0 <- 0.2
extinction_0 <- 0.1
speciation_1 <- 0.2
extinction_1 <- 0.1
maxN <- 1e3
maxT <- 50
tree.bisse()
library("diversitree")
transition_0to1 <- 0.1
transition_1to0 <- 0.1
speciation_0 <- 0.2
extinction_0 <- 0.1
speciation_1 <- 0.2
extinction_1 <- 0.1
maxN <- 1e3
maxT <- 50
tree.bisse()
setwd("C:/Users/lexik/evolution/tasks/project")
getwd()
#install.packages('readxl')
library("readxl")
df = read_xlsx("C:/Users/lexik/evolution/tasks/project/AllSpecimens.xlsx")
allSpecimens <- df
head(allSpecimens)
colnames(allSpecimens)
bodyMeasurements <- read.csv("LinMeas.SpeciesSummaries.csv")
head(bodyMeasurements)
colnames(bodyMeasurements)
microHabitats <- read.csv("Microhabitats.csv")
head(microHabitats)
colnames(microHabitats)
neoteny <- read.csv("neoteny.csv")
head(neoteny)
colnames(neoteny)
str(neoteny)
library('dplyr')
library('tidyr')
library('plyr')
library('ggplot2')
library('readr')
library('multcompView')
library('ggpubr')
library('lme4')
library('tidymodels')
library('multilevelmod')
###############################
#########
neoSp <- apply(neoteny, 1, function(x) paste(x[1], x[2], sep="_"))
rownames(neoteny) <- neoSp
rownames(microHabitats) <- microHabitats[,1]
Keeps <- intersect(rownames(neoteny), rownames(microHabitats))
rownames(bodyMeasurements) <- bodyMeasurements[,1]
#### Fusing into 1 object##########
rownames(neoteny) <- neoSp
rownames(microHabitats) <- microHabitats[,1]
Keeps2 <- intersect(rownames(neoteny), rownames(microHabitats))
rownames(bodyMeasurements) <- bodyMeasurements[,1]
Keeps2 <- intersect(Keeps2, rownames(bodyMeasurements))
newMat <- data.frame(neoteny[Keeps2,], bodyMeasurements[Keeps2,], microHabitats[Keeps2,])
#####
neo2 <- neoteny[Keeps,]
micro2 <- microHabitats[Keeps,]
ohabitat <- tapply(micro2$M7, micro2$M7, length)
oneo <- tapply(neo2$neotenic, neo2$neotenic, length)
outMat <- matrix(0, nrow=7, ncol=4)
rownames(outMat) <- unique(micro2$M7)
colnames(outMat) <- unique(neo2$neotenic)
for (count in 1:4){
Neo <- unique(neo2$neotenic)[count]
NeoRows <- which(neo2$neotenic == Neo)
Habs <- tapply(micro2[NeoRows,"M7"], micro2[NeoRows,"M7"], length)
outMat[names(Habs),count] <- Habs
}
outMat <- outMat[,c("-1","0","1","2")]
Cols <- c('#d53e4f','#fc8d59','#fee08b','#ffffbf','#e6f598','#99d594','#3288bd')
names(Cols) <- unique(micro2$M7)
barplot(outMat, col=Cols, ylim=c(0,250), legend.text=rownames(outMat), xlab="Lifestyle", ylab="Number of Species")
svl2 <- reframe(bodyMeasurements, .by=c("Species", "SVL"))
rownames(svl2) <- svl2[,1]
micro3 <- subset(micro2, select = -c(M6, L6, L7, McM6, McL6, Pleth))
neo3 <- subset(neo2, select = -c(notes))
listDF <- list(micro3, neo3, svl2)
master <- subset(newMat, select = -c(notes, M6, L6, L7, McM6, McL6, McM6, Pleth, Species.1, Species))
master2 <- subset(newMat, select = -c(notes, M6, L6, L7, McM6, McL6, McM6, Pleth, Species.1, Species, SE, HL, BWL, FLL, HLL))
master2$genusspec <- paste(master2$genus, master2$species)
master3 <- master2 %>%
mutate(neotenic = factor(neotenic))
master3 <- master2 %>%
mutate(M7 = factor(M7),neotenic = factor(neotenic), genusspec=factor(genusspec))
m1 <- lmer(SVL ~ M7 + neotenic + (1|genusspec), data=master3, control=lmerControl(check.nobs.vs.nlev = "ignore", check.nobs.vs.rankZ = "ignore", check.nobs.vs.nRE="ignore"))
summary(m1)
ranef(m1)
m1 <- lmer(SVL ~ M7 + neotenic + (1| M7/neotenic), data=master3)
par(pch=19)
plot(log(SVL) ~ log(TL), data=master, xlab="Snout Vent Length", ylab="Tail Length", main="SVL vs TL", col=factor(master$M7), sub="R2 = 0.602 Slope = 0.679")
abline(lm(log(SVL)~ log(TL), data=master), col='red')
legend("topleft", legend = levels(factor(master$M7)), pch = 19, col = factor(levels(factor(master$M7))))
(lm(log(SVL) ~ log(TL), data=master))
ggplot(master3,aes(x=M7,y=SVL,col=neotenic)) + geom_jitter() + geom_boxplot(alpha=0.2) + facet_wrap(~neotenic)
fit = lmer(SVL ~ 1 + (1|M7:genusspec),data=master3)
fit = lmer(SVL ~ 1 + (1|M7:genusspec),data=master3)
boundary(singular)
fit = lmer(SVL ~ M7 + (1|genusspec),data=master3)
lm(SVL~M7,data=master3)
test <- lm(SVL~M7,data=master3)
plot(test)
?abline()
nested.mod=lmer(SVL ~ M7 + neotenic + (1 | genusspec))
nested.mod=lmer(master3$SVL ~ master3$M7 + master3$neotenic + (1 | master3$genusspec))
ggplot(master3,aes(x=M7,y=TL,col=neotenic)) + geom_jitter() + geom_boxplot(alpha=0.2) + facet_wrap(~neotenic)
