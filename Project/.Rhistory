q()
q()
5
A <- 5
A * 2
B <- c(A, 5, 5)
B
B * 10
'B' * 10
B <- c(A, 5, 5)
B * 2
C <- c(B, 6, 10)
C * 6
C*1
D <- c(1, 5, ,10, 15, 20)
D <- c(1, 5, 10, 15, 20)
sum(D)
mean (D)
min(D)
E <- c(6, 7, 8, 9, 10)
which(E == 8)
which(E > 8)
E[which(E>8)]
trueMean1 <- 5
trueSD1 <- 5
population1 <- rnorm(1e6, trueMean1, trueSD1)
?rnorm
trueMean2 <- 4
trueSD2 <- 5
population2 <- rnorm
population2 <- rnorm(1e6, trueMean2, trueSD2)
Size <- 50
Sample1 <- sample(population1, Size)
Sample2 <- sample(population2, Size)
?sample
Sample1
Sample2
population1
boxplot(Sample1, Sample2)
individual1 <- c("B","A")
individual2 <- c("A","A")
Gam1 <- sample(individual1, 1)
Gam2 <- sample(individual2, 1)
newBaby <- c(Gam1, Gam2)
newBaby
isHet <- c()
?for
()
for (i in 1:100)
{
Gam1 <- sample(individiual1, 1)
Gam2 <- sample(individual2, 1)
newBaby <- c(Gam1, Gam2)
isHet[i] <- Gam1 == Gam2
}
for (i in 1:100) {
Gam1 <- sample(individual1, 1)
Gam2 <- sample(individual2, 1)
newBaby <- c(Gam1, Gam2)
isHet[i] <- Gam1 == Gam2
}
sum(isHet) / length(isHet)
source("http://jonsmitchell.com/code/simFxn04.R")
MatGrandma <- makeFounder("grandma_mom")
MatGrandpa <- makeFounder("grandpa_mom")
PatGrandma <- makeFounder("grandma_da")
PatGrandpa <- makeFounder("grandpa_da")
View(MatGrandma)
View(makeFounder)
head(MatGrandma)
nrow(MatGrandma)
Alan <- makeBaby(PatGrandma, PatGrandpa)
Alan
Brenda <- makeBaby(MatGrandma, MatGrandpa)
Focus <- makeBaby(Brenda, Alan)
View(Focus)
View(Brenda)
View(Focus)
ToMom <- length(grep("mom", Focus)) / length(Focus)
ToMom
ToMomDad <- length(grep("grandpa_mom", Focus)) / length(Focus)
ToMomMom <- length(grep("grandma_mom", Focus)) / length(Focus)
ToMomMom
ToMomDad
sum(ToMomMom, ToMomDad)
ToDadMom <- length(grep("grandma_dad", Focus)) / length(Focus)
ToDadDad <- length(grep("grandpa_dad", Focus)) / length(Focus)
ToDadMom
ToDadDad
Sibling_01 <- makeBaby(Brenda, Alan)
ToSib <- length(intersect(Focus, Sibling_01)) / length(Focus)
ToSib
ManySiblings <- replicate(1e3, length(intersect(Focus, makeBaby(Brenda, Alan)))) / length(Focus)
ManySiblings <- replicate(1e3, length(intersect(Focus, makeBaby(Brenda, Alan)))) / length(Focus))
quantile(ManySiblings)
mean(ManySiblings)
plot(ManySiblings)
packages(swirl)
library(swirl)
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean()
my_mean(my_vector)
my_mean(c(4,5,10))
submit()
submit()
submit()
submit()
submit()
submit()
remainder(5)
remainder(1,5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div=2)
args(remainder)
submit()
evaluate(c(1.4,3.6,7.9,8.8))
setwd("C:/Users/lexik/evolution/tasks/project")
getwd()
install.packages('readxl')
library("readxl")
df = read_xlsx("C:/Users/lexik/evolution/tasks/project/AllSpecimens.xlsx")
allSpecimens <- df
head(allSpecimens)
colnames(allSpecimens)
footMeans <- read.csv("FootLandmarks.SpeciesSummary.Csize.csv")
head(footMeans)
colnames(footMeans)
bodyMeasurements <- read.csv("LinMeas.SpeciesSummaries.csv")
head(bodyMeasurements)
colnames(bodyMeasurements)
microHabitats <- read.csv("Microhabitats.csv")
head(microHabitats)
colnames(microHabitats)
neoteny <- read.csv("neoteny.csv")
head(neoteny)
colnames(neoteny)
str(neoteny)
install.packages('dplyr')
library('dplyr')
install.packages('ggplot2')
library('ggplot2')
install.packages("reshape2")
library("reshape2")
alwaysNeotenic <- neoteny %>% group_by(genus, species) %>% reframe(which(neotenic=='2'))
normalDevelopment <- neoteny %>% group_by(genus, species) %>% reframe(which(neotenic=='0'))
directDevelopment <- neoteny %>% group_by(genus, species) %>% reframe(which(neotenic=='-1'))
flexDevelop <- neoteny %>% group_by(genus, species) %>% reframe(which(neotenic=='1'))
microHabitats2 <- microHabitats[, -c(2, 3, 5:8)]
nrow(microHabitats2)
norm_Develop <- paste(normalDevelopment$genus, normalDevelopment$species, sep="_")
flex_Develop <- paste(flexDevelop$genus, flexDevelop$species, sep="_")
direct_Develop <- paste(directDevelopment$genus, directDevelopment$species, sep="_")
always_Neo <- paste(alwaysNeotenic$genus, alwaysNeotenic$species, sep="_")
normDevHabitat <- filter(microHabitats2, Species %in% norm_Develop)
flexDevHabitat <- filter(microHabitats2, Species %in% flex_Develop)
directDevHabitat <- filter(microHabitats2, Species %in% direct_Develop)
alwaysNeoHabitat <- filter(microHabitats2, Species %in% always_Neo)
str(alwaysNeoHabitat)
count1 <- normDevHabitat %>% count(M7)
count2 <- flexDevHabitat %>% count(M7)
count3 <- directDevHabitat %>% count(M7)
count4 <- alwaysNeoHabitat %>% count(M7)
colnames(count1) <- c('habitat','number')
colnames(count2) <- c('habitat','number')
colnames(count3) <- c('habitat','number')
colnames(count4) <- c('habitat','number')
count1[nrow(count1) +1,] <-list("A",0)
count2[nrow(count2) +1,] <-list("A",0)
count2[nrow(count2) +1,] <-list("C",0)
count2[nrow(count2) +1,] <-list("S",0)
count2[nrow(count2) +1,] <-list("A",0)
count2[nrow(count2) +1,] <-list("C",0)
count3[nrow(count3) +1,] <-list("SA",0)
count3[nrow(count3) +1,] <-list("W",0)
count4[nrow(count4) +1,] <-list("T",0)
count4[nrow(count4) +1,] <-list("A",0)
count4[nrow(count4) +1,] <-list("F",0)
count4[nrow(count4) +1,] <-list("S",0)
test <- data.frame(count1,count2,count3,count4)
View(allSpecimens)
View(allSpecimens)
setwd("C:/Users/lexik/evolution/tasks/project")
library("readxl")
df = read_xlsx("C:/Users/lexik/evolution/tasks/project/AllSpecimens.xlsx")
allSpecimens <- df
head(allSpecimens)
colnames(allSpecimens)
footMeans <- read.csv("FootLandmarks.SpeciesSummary.Csize.csv")
head(footMeans)
colnames(footMeans)
bodyMeasurements <- read.csv("LinMeas.SpeciesSummaries.csv")
head(bodyMeasurements)
colnames(bodyMeasurements)
microHabitats <- read.csv("Microhabitats.csv")
head(microHabitats)
colnames(microHabitats)
neoteny <- read.csv("neoteny.csv")
head(neoteny)
colnames(neoteny)
str(neoteny)
#install.packages('dplyr')
library('dplyr')
#install.packages('ggplot2')
library('ggplot2')
#install.packages("reshape2")
library("reshape2")
alwaysNeotenic <- neoteny %>% group_by(genus, species) %>% reframe(which(neotenic=='2'))
normalDevelopment <- neoteny %>% group_by(genus, species) %>% reframe(which(neotenic=='0'))
directDevelopment <- neoteny %>% group_by(genus, species) %>% reframe(which(neotenic=='-1'))
flexDevelop <- neoteny %>% group_by(genus, species) %>% reframe(which(neotenic=='1'))
microHabitats2
Habitats <- tapply(microHabitats2$M7, microHabitats2$M7, length)
Habitats
head(neoteny)
nrow(Habitats)
nrow(neoteny)
nrow(microHabitats2)
head(microHabitats2)
neoSp <- apply(neoteny, 1, function(x) paste(x[1], x[2], sep="\_"))
neoSp <- apply(neoteny, 1, function(x) paste(x[1], x[2], sep="_"))
neoSp
setdiff(microHabitats2[,1], neoSp)
neoSp <- apply(neoteny, 1, function(x) paste(x[1], x[2], sep="_"))
rownames(neoteny) <- neoSp
rownames(microHabitats) <- microHabitats[,1]
Keeps <- intersect(rownames(neoteny), rownames(microHabitats))
neo2 <- neoteny[Keeps,]
micro2 <- microHabitats[Keeps,]
dim(neo2)
dim(micro2)
head(micro2)
head(neo2)
neo2 <- neoteny[Keeps,]
micro2 <- microHabitats[Keeps,]
ohabitat <- tapply(micro2$M7, micro2$M7, length)
oneo <- tapply(neo2$neotenic, neo2$neotenic, length)
ohabitat
oneo
Guide <- sapply(1:nrow(oneo), function(x) paste(ohabitat[x,"M7"], oneo[x,3], sep="-"))
Guide <- sapply(1:nrow(oneo), function(x) paste(micro2[x,"M7"], neo2[x,3], sep="-"))
dim(o)
Guide
Guide <- sapply(1:nrow(neo2), function(x) paste(micro2[x,"M7"], neo2[x,3], sep="-"))
Guide <- sapply(1:nrow(neo2), function(x) paste(micro2[x,"M7"], neo2[x,3], sep="-"))
Guide <- sapply(1:nrow(neo2), function(x) paste(micro2[x,"M7"], neo2[x,3], sep="-"))
Guide
tapply(Guide,Guide,length)
Counts <- tapply(oneo, ohabitat, length)
Counts <- tapply(neo2[,3], micro2$M7, length)
Counts
Counts <- tapply(neo2[,3], neo2[,3], function(x) tapply(micro2$M7, micro2$M7, length))
Counts
outMat <- matrix(NA, nrow=4, 7)
for (count in 1:4){
Neo <- unique(neo2$neotenic)[count]
NeoRows <- which(neo2$neotenic == Neo)
outMat[count,] <- tapply(micro2$M7[NeoRows], micro2$M7[NeoRows], length)
}
outMat <- matrix(NA, nrow=4, 7)
for (count in 1:4){
Neo <- unique(neo2$neotenic)[count]
NeoRows <- which(neo2$neotenic == Neo)
outMat[count,] <- tapply(micro2[NeoRows,"M7"], micro2[NeoRows,"M7"], length)
}
count <- 1
Neo <- unique(neo2$neotenic)[count]
NeoRows <- which(neo2$neotenic == Neo)
tapply(micro2[NeoRows,"M7"], micro2[NeoRows,"M7"], length)
outMat <- matrix(NA, nrow=4, 7)
colnames(outMat) <- unique(micro2$M7)
for (count in 1:4){
Neo <- unique(neo2$neotenic)[count]
NeoRows <- which(neo2$neotenic == Neo)
Habs <- tapply(micro2[NeoRows,"M7"], micro2[NeoRows,"M7"], length)
outMat[count,names(Habs)] <- Habs
}
outMat
outMat <- matrix(0, nrow=4, 7)
colnames(outMat) <- unique(micro2$M7)
for (count in 1:4){
Neo <- unique(neo2$neotenic)[count]
NeoRows <- which(neo2$neotenic == Neo)
Habs <- tapply(micro2[NeoRows,"M7"], micro2[NeoRows,"M7"], length)
outMat[count,names(Habs)] <- Habs
}
outMat
outMat <- matrix(0, nrow=4, 7)
colnames(outMat) <- unique(micro2$M7)
rownames(outMat) <- unique(neo2$neotenic)
for (count in 1:4){
Neo <- unique(neo2$neotenic)[count]
NeoRows <- which(neo2$neotenic == Neo)
Habs <- tapply(micro2[NeoRows,"M7"], micro2[NeoRows,"M7"], length)
outMat[count,names(Habs)] <- Habs
}
outMat
barplot(outMat)
barplot(t(outMat))
Cols <- c('#d73027','#fc8d59','#fee08b','#ffffbf','#d9ef8b','#91cf60','#1a9850')
barplot(t(outMat), col=Cols)
outMat <- matrix(0, nrow=7, ncol=4)
rownames(outMat) <- unique(micro2$M7)
colnames(outMat) <- unique(neo2$neotenic)
for (count in 1:4){
Neo <- unique(neo2$neotenic)[count]
NeoRows <- which(neo2$neotenic == Neo)
Habs <- tapply(micro2[NeoRows,"M7"], micro2[NeoRows,"M7"], length)
outMat[names(Habs),count] <- Habs
}
outMat <- outMat[,c("-1","0","1","2")]
Cols <- c('#d73027','#fc8d59','#fee08b','#ffffbf','#d9ef8b','#91cf60','#1a9850')
names(Cols) <- unique(micro2$M7)
barplot(outMat, col=Cols)
legend("topright", pch=16, cex=1.25, col=Cols, legend=names(Cols), bty="n")
par(las=1)
barplot(outMat, col=Cols)
legend("topright", pch=16, cex=1.25, col=Cols, legend=names(Cols), bty="n")
par(las=1, mar=c(4,5,1,1))
barplot(outMat, col=Cols)
legend("topright", pch=16, cex=1.25, col=Cols, legend=names(Cols), bty="n")
?barplot
barplot(outMat, col=Cols, legend.text=T)
barplot(outMat, col=Cols, legend.text=T, legend.pch=16, legend.bty="n")
?barplot
par(las=1, mar=c(4,5,1,1))
barplot(outMat, col=Cols, legend.text=T)
View(micro2)
par(las=1, mar=c(4,5,1,1))
barplot(outMat, col=Cols, legend.text=T, xlim=300)
par(las=1, mar=c(4,5,1,1))
barplot(outMat, col=Cols, legend.text=T, xlab=300)
par(las=1, mar=c(4,5,1,1))
barplot(outMat, col=Cols, legend.text=T, ylab=300)
par(las=1, mar=c(4,5,1,1))
barplot(outMat, col=Cols, legend.text=T, ylim=300)
par(las=1, mar=c(4,5,1,1))
barplot(outMat, col=Cols, legend.text=T)
par(las=1, mar=c(4,5,1,1))
barplot(outMat, col=Cols, legend.text=T, ylab="Number of Species", xlab="Lifestyle")
Cols <- c('#d53e4f','#fc8d59','#fee08b','#ffffbf','#e6f598','#99d594','#3288bd')
names(Cols) <- unique(micro2$M7)
par(las=1, mar=c(4,5,1,1))
barplot(outMat, col=Cols, legend.text=T, ylab="Number of Species", xlab="Lifestyle")
?par()
Cols <- c('#d53e4f','#fc8d59','#fee08b','#ffffbf','#e6f598','#99d594','#3288bd')
names(Cols) <- unique(micro2$M7)
par(las=1, mar=c(4,5,1,1))
barplot(outMat, col=Cols, legend.text=T, ylab="Number of Species", xlab="Lifestyle", ylim=300)
Cols <- c('#d53e4f','#fc8d59','#fee08b','#ffffbf','#e6f598','#99d594','#3288bd')
names(Cols) <- unique(micro2$M7)
par(las=1, mar=c(4,5,1,1))
barplot(outMat, col=Cols, legend.text=T, ylab="Number of Species", xlab="Lifestyle", ylim='300')
Cols <- c('#d53e4f','#fc8d59','#fee08b','#ffffbf','#e6f598','#99d594','#3288bd')
names(Cols) <- unique(micro2$M7)
par(las=1, mar=c(4,5,1,1))
barplot(outMat, col=Cols, legend.text=T, ylab="Number of Species", xlab="Lifestyle", ylim=300, xlim=NULL)
Cols <- c('#d53e4f','#fc8d59','#fee08b','#ffffbf','#e6f598','#99d594','#3288bd')
names(Cols) <- unique(micro2$M7)
par(las=1, mar=c(4,5,1,1))
barplot(outMat, col=Cols, legend.text=T, ylab="Number of Species", xlab="Lifestyle")
Cols <- c('#d53e4f','#fc8d59','#fee08b','#ffffbf','#e6f598','#99d594','#3288bd')
names(Cols) <- unique(micro2$M7)
par(las=1, mar=c(4,5,1,1))
barplot(outMat, col=Cols, legend.text=T, ylab="Number of Species", xlab="Lifestyle", ylim=c(0,300), xlim=NULL)
Cols <- c('#d53e4f','#fc8d59','#fee08b','#ffffbf','#e6f598','#99d594','#3288bd')
names(Cols) <- unique(micro2$M7)
par(las=1, mar=c(4,5,1,1))
barplot(outMat, col=Cols, legend.text=T, ylab="Number of Species", xlab="Lifestyle", ylim=c(0,250), xlim=NULL)
Cols <- c('#d53e4f','#fc8d59','#fee08b','#ffffbf','#e6f598','#99d594','#3288bd')
names(Cols) <- unique(micro2$M7)
par(las=1, mar=c(4,5,1,1))
barplot(outMat, col=Cols, legend.text=T, ylab="Number of Species", xlab="Lifestyle", ylim=c(0,225), xlim=NULL)
Cols <- c('#d53e4f','#fc8d59','#fee08b','#ffffbf','#e6f598','#99d594','#3288bd')
names(Cols) <- unique(micro2$M7)
par(las=1, mar=c(4,5,1,1))
barplot(outMat, col=Cols, legend.text=T, ylab="Number of Species", xlab="Lifestyle", ylim=c(0,250), xlim=NULL)
