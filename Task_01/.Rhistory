install.packages("swirl")
library(swirl)
library(swirl)
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2 <- matrix(data=1:20, nrow=4, ncol=5, byrow=FALSE, dimnames=FALSE)
my_matrix2 <- matrix(data=1:20, nrow=4, ncol=5, byrow=FALSE, dimnames=NULL)
identical(my_matrix, my_matrix2)
patients <- c(""Bill, Gina, Kelly, Sean"")
patients <- ""Bill, Gina, Kelly, Sean"")
patients <- ""Bill, Gina, Kelly, Sean""
help()
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients, my_matrix)
-- my_data <- data.frame(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient","age","weight","bp","rating","test")
colnames(cnames)
colnames(my_data) <- cnames
my_data
library(swirl)
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6<7
10<=10
5 ?= 7
5 != 7
!5=!7
5=7!
5 != 7
! 5=7
!5==7
FALSE & FALSE
true & c(TRUE, FALSE, FALSE)
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5>8 || 6!=8 && 4>3.9
isTRUE(6>4)
identical('twins','twins')
xor(5 == 6, !FALSE)
ints <-sample(10)
ints
ints > 5
which(ints > 7)
any(int<0)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11, num =5)
remainder(4, div=2)
args(remainder)
submit()
evaluate(c(1.4,3.6,7.9,8.8))
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x)[x+1],6)
evaluate(function(x){x+1},6)
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[length]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming","is","fun!")
submit()
telegram("programming","sucks")
submit()
mad_libs("cat","cute","yarn")
submit()
'I' %p% 'love' %p% 'cats!'
'I' %p% 'love' %p% 'R!'
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x=cars$dist, y=cars$speed)
plot(x=cars$speed, y=cars$dist, xlab = "Speed")
plot(x=cars$speed, y=cars$dist, ylab = "Stopping Distance")
plot(x=cars$speed, y=cars$dist, ylab = "Stopping Distance", xlab="Speed")
plot(cars,main="My Plot")
plot(cars, sub="My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = c(10,15))
plot(cars, pch =2)
data(mtcars)
?boxplot
boxplot(formula = mpg ~ cyl, dat = mtcars)
hist(mtcars$mpg)
setwd(C:\\Users\\lexik\\Evolution\\Tasks\\Task_02)
setwd(C:\Users\lexik\Evolution\Tasks\Task_02)
